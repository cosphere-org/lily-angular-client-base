/**
  * THIS FILE WAS AUTOGENERATED, ALL MANUAL CHANGES CAN BE
  * OVERWRITTEN
  */
import { NgModule } from '@angular/core';
import { HttpClientModule } from '@angular/common/http';
/** Domains */
import { AccountSettingsDomain } from './domains/account_settings/index';
import { AccountsDomain } from './domains/accounts/index';
import { AttemptStatsDomain } from './domains/attempt_stats/index';
import { AttemptsDomain } from './domains/attempts/index';
import { AuthTokensDomain } from './domains/auth_tokens/index';
import { CardsDomain } from './domains/cards/index';
import { CategoriesDomain } from './domains/categories/index';
import { ContactsDomain } from './domains/contacts/index';
import { DonationsDomain } from './domains/donations/index';
import { ExternalAppsDomain } from './domains/external_apps/index';
import { FocusRecordsDomain } from './domains/focus_records/index';
import { FragmentHashtagsDomain } from './domains/fragment_hashtags/index';
import { FragmentWordsDomain } from './domains/fragment_words/index';
import { FragmentsDomain } from './domains/fragments/index';
import { GeometriesDomain } from './domains/geometries/index';
import { HashtagsDomain } from './domains/hashtags/index';
import { InternalDomain } from './domains/internal/index';
import { InvoicesDomain } from './domains/invoices/index';
import { LinksDomain } from './domains/links/index';
import { MediaitemsDomain } from './domains/mediaitems/index';
import { NotificationsDomain } from './domains/notifications/index';
import { PathsDomain } from './domains/paths/index';
import { PaymentCardsDomain } from './domains/payment_cards/index';
import { PaymentsDomain } from './domains/payments/index';
import { RecallDomain } from './domains/recall/index';
import { SubscriptionsDomain } from './domains/subscriptions/index';
import { TasksDomain } from './domains/tasks/index';
import { WordsDomain } from './domains/words/index';
/** Services */
// import {
//   APIService,
//   ClientService,
//   // ConfigService,
//   Config
// } from './services/index';
import { ClientService } from './services/client.service';
import { APIService } from './services/api.service';
// export function configFactory(config: Config) {
//   return new ConfigService(config);
// }
export class ClientModule {
    static forRoot(config) {
        return {
            ngModule: ClientModule,
            providers: [
                // {
                //     provide: ConfigService,
                //     useFactory: configFactory(config)
                // },,
                { provide: 'config', useValue: config }
            ]
        };
    }
}
ClientModule.decorators = [
    { type: NgModule, args: [{
                imports: [HttpClientModule],
                providers: [
                    ClientService,
                    // Domains
                    AccountSettingsDomain,
                    AccountsDomain,
                    AttemptStatsDomain,
                    AttemptsDomain,
                    AuthTokensDomain,
                    CardsDomain,
                    CategoriesDomain,
                    ContactsDomain,
                    DonationsDomain,
                    ExternalAppsDomain,
                    FocusRecordsDomain,
                    FragmentHashtagsDomain,
                    FragmentWordsDomain,
                    FragmentsDomain,
                    GeometriesDomain,
                    HashtagsDomain,
                    InternalDomain,
                    InvoicesDomain,
                    LinksDomain,
                    MediaitemsDomain,
                    NotificationsDomain,
                    PathsDomain,
                    PaymentCardsDomain,
                    PaymentsDomain,
                    RecallDomain,
                    SubscriptionsDomain,
                    TasksDomain,
                    WordsDomain,
                    // Facade
                    APIService,
                ]
            },] }
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bjb3NwaGVyZS9jbGllbnQvIiwic291cmNlcyI6WyJjbGllbnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7SUFHSTtBQUVKLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXhELGNBQWM7QUFDZCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzVELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVwRCxlQUFlO0FBQ2YsV0FBVztBQUNYLGdCQUFnQjtBQUNoQixtQkFBbUI7QUFDbkIsc0JBQXNCO0FBQ3RCLFdBQVc7QUFDWCw2QkFBNkI7QUFFN0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUlwRCxrREFBa0Q7QUFDbEQsc0NBQXNDO0FBQ3RDLElBQUk7QUF5Q0osTUFBTTtJQUNGLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBYztRQUN6QixNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsWUFBWTtZQUN0QixTQUFTLEVBQUU7Z0JBQ1AsSUFBSTtnQkFDSiw4QkFBOEI7Z0JBQzlCLHdDQUF3QztnQkFDeEMsTUFBTTtnQkFDTixFQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBQzthQUN4QztTQUNKLENBQUM7SUFDTixDQUFDOzs7WUFuREosUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO2dCQUMzQixTQUFTLEVBQUU7b0JBQ1QsYUFBYTtvQkFFYixVQUFVO29CQUNWLHFCQUFxQjtvQkFDckIsY0FBYztvQkFDZCxrQkFBa0I7b0JBQ2xCLGNBQWM7b0JBQ2QsZ0JBQWdCO29CQUNoQixXQUFXO29CQUNYLGdCQUFnQjtvQkFDaEIsY0FBYztvQkFDZCxlQUFlO29CQUNmLGtCQUFrQjtvQkFDbEIsa0JBQWtCO29CQUNsQixzQkFBc0I7b0JBQ3RCLG1CQUFtQjtvQkFDbkIsZUFBZTtvQkFDZixnQkFBZ0I7b0JBQ2hCLGNBQWM7b0JBQ2QsY0FBYztvQkFDZCxjQUFjO29CQUNkLFdBQVc7b0JBQ1gsZ0JBQWdCO29CQUNoQixtQkFBbUI7b0JBQ25CLFdBQVc7b0JBQ1gsa0JBQWtCO29CQUNsQixjQUFjO29CQUNkLFlBQVk7b0JBQ1osbUJBQW1CO29CQUNuQixXQUFXO29CQUNYLFdBQVc7b0JBRVgsU0FBUztvQkFDVCxVQUFVO2lCQUNYO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAgKiBUSElTIEZJTEUgV0FTIEFVVE9HRU5FUkFURUQsIEFMTCBNQU5VQUwgQ0hBTkdFUyBDQU4gQkVcbiAgKiBPVkVSV1JJVFRFTlxuICAqL1xuXG5pbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcblxuLyoqIERvbWFpbnMgKi9cbmltcG9ydCB7IEFjY291bnRTZXR0aW5nc0RvbWFpbiB9IGZyb20gJy4vZG9tYWlucy9hY2NvdW50X3NldHRpbmdzL2luZGV4JztcbmltcG9ydCB7IEFjY291bnRzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2FjY291bnRzL2luZGV4JztcbmltcG9ydCB7IEF0dGVtcHRTdGF0c0RvbWFpbiB9IGZyb20gJy4vZG9tYWlucy9hdHRlbXB0X3N0YXRzL2luZGV4JztcbmltcG9ydCB7IEF0dGVtcHRzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2F0dGVtcHRzL2luZGV4JztcbmltcG9ydCB7IEF1dGhUb2tlbnNEb21haW4gfSBmcm9tICcuL2RvbWFpbnMvYXV0aF90b2tlbnMvaW5kZXgnO1xuaW1wb3J0IHsgQ2FyZHNEb21haW4gfSBmcm9tICcuL2RvbWFpbnMvY2FyZHMvaW5kZXgnO1xuaW1wb3J0IHsgQ2F0ZWdvcmllc0RvbWFpbiB9IGZyb20gJy4vZG9tYWlucy9jYXRlZ29yaWVzL2luZGV4JztcbmltcG9ydCB7IENvbnRhY3RzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2NvbnRhY3RzL2luZGV4JztcbmltcG9ydCB7IERvbmF0aW9uc0RvbWFpbiB9IGZyb20gJy4vZG9tYWlucy9kb25hdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHsgRXh0ZXJuYWxBcHBzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2V4dGVybmFsX2FwcHMvaW5kZXgnO1xuaW1wb3J0IHsgRm9jdXNSZWNvcmRzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2ZvY3VzX3JlY29yZHMvaW5kZXgnO1xuaW1wb3J0IHsgRnJhZ21lbnRIYXNodGFnc0RvbWFpbiB9IGZyb20gJy4vZG9tYWlucy9mcmFnbWVudF9oYXNodGFncy9pbmRleCc7XG5pbXBvcnQgeyBGcmFnbWVudFdvcmRzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2ZyYWdtZW50X3dvcmRzL2luZGV4JztcbmltcG9ydCB7IEZyYWdtZW50c0RvbWFpbiB9IGZyb20gJy4vZG9tYWlucy9mcmFnbWVudHMvaW5kZXgnO1xuaW1wb3J0IHsgR2VvbWV0cmllc0RvbWFpbiB9IGZyb20gJy4vZG9tYWlucy9nZW9tZXRyaWVzL2luZGV4JztcbmltcG9ydCB7IEhhc2h0YWdzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2hhc2h0YWdzL2luZGV4JztcbmltcG9ydCB7IEludGVybmFsRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2ludGVybmFsL2luZGV4JztcbmltcG9ydCB7IEludm9pY2VzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2ludm9pY2VzL2luZGV4JztcbmltcG9ydCB7IExpbmtzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL2xpbmtzL2luZGV4JztcbmltcG9ydCB7IE1lZGlhaXRlbXNEb21haW4gfSBmcm9tICcuL2RvbWFpbnMvbWVkaWFpdGVtcy9pbmRleCc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25zRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL25vdGlmaWNhdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHsgUGF0aHNEb21haW4gfSBmcm9tICcuL2RvbWFpbnMvcGF0aHMvaW5kZXgnO1xuaW1wb3J0IHsgUGF5bWVudENhcmRzRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL3BheW1lbnRfY2FyZHMvaW5kZXgnO1xuaW1wb3J0IHsgUGF5bWVudHNEb21haW4gfSBmcm9tICcuL2RvbWFpbnMvcGF5bWVudHMvaW5kZXgnO1xuaW1wb3J0IHsgUmVjYWxsRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL3JlY2FsbC9pbmRleCc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb25zRG9tYWluIH0gZnJvbSAnLi9kb21haW5zL3N1YnNjcmlwdGlvbnMvaW5kZXgnO1xuaW1wb3J0IHsgVGFza3NEb21haW4gfSBmcm9tICcuL2RvbWFpbnMvdGFza3MvaW5kZXgnO1xuaW1wb3J0IHsgV29yZHNEb21haW4gfSBmcm9tICcuL2RvbWFpbnMvd29yZHMvaW5kZXgnO1xuXG4vKiogU2VydmljZXMgKi9cbi8vIGltcG9ydCB7XG4vLyAgIEFQSVNlcnZpY2UsXG4vLyAgIENsaWVudFNlcnZpY2UsXG4vLyAgIC8vIENvbmZpZ1NlcnZpY2UsXG4vLyAgIENvbmZpZ1xuLy8gfSBmcm9tICcuL3NlcnZpY2VzL2luZGV4JztcblxuaW1wb3J0IHsgQ2xpZW50U2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvY2xpZW50LnNlcnZpY2UnO1xuaW1wb3J0IHsgQVBJU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvYXBpLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSAnLi9zZXJ2aWNlcy9jb25maWcuc2VydmljZSc7XG5cblxuLy8gZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ0ZhY3RvcnkoY29uZmlnOiBDb25maWcpIHtcbi8vICAgcmV0dXJuIG5ldyBDb25maWdTZXJ2aWNlKGNvbmZpZyk7XG4vLyB9XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtIdHRwQ2xpZW50TW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgQ2xpZW50U2VydmljZSxcblxuICAgIC8vIERvbWFpbnNcbiAgICBBY2NvdW50U2V0dGluZ3NEb21haW4sXG4gICAgQWNjb3VudHNEb21haW4sXG4gICAgQXR0ZW1wdFN0YXRzRG9tYWluLFxuICAgIEF0dGVtcHRzRG9tYWluLFxuICAgIEF1dGhUb2tlbnNEb21haW4sXG4gICAgQ2FyZHNEb21haW4sXG4gICAgQ2F0ZWdvcmllc0RvbWFpbixcbiAgICBDb250YWN0c0RvbWFpbixcbiAgICBEb25hdGlvbnNEb21haW4sXG4gICAgRXh0ZXJuYWxBcHBzRG9tYWluLFxuICAgIEZvY3VzUmVjb3Jkc0RvbWFpbixcbiAgICBGcmFnbWVudEhhc2h0YWdzRG9tYWluLFxuICAgIEZyYWdtZW50V29yZHNEb21haW4sXG4gICAgRnJhZ21lbnRzRG9tYWluLFxuICAgIEdlb21ldHJpZXNEb21haW4sXG4gICAgSGFzaHRhZ3NEb21haW4sXG4gICAgSW50ZXJuYWxEb21haW4sXG4gICAgSW52b2ljZXNEb21haW4sXG4gICAgTGlua3NEb21haW4sXG4gICAgTWVkaWFpdGVtc0RvbWFpbixcbiAgICBOb3RpZmljYXRpb25zRG9tYWluLFxuICAgIFBhdGhzRG9tYWluLFxuICAgIFBheW1lbnRDYXJkc0RvbWFpbixcbiAgICBQYXltZW50c0RvbWFpbixcbiAgICBSZWNhbGxEb21haW4sXG4gICAgU3Vic2NyaXB0aW9uc0RvbWFpbixcbiAgICBUYXNrc0RvbWFpbixcbiAgICBXb3Jkc0RvbWFpbixcblxuICAgIC8vIEZhY2FkZVxuICAgIEFQSVNlcnZpY2UsXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQ2xpZW50TW9kdWxlIHtcbiAgICBzdGF0aWMgZm9yUm9vdChjb25maWc6IENvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IENsaWVudE1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgcHJvdmlkZTogQ29uZmlnU2VydmljZSxcbiAgICAgICAgICAgICAgICAvLyAgICAgdXNlRmFjdG9yeTogY29uZmlnRmFjdG9yeShjb25maWcpXG4gICAgICAgICAgICAgICAgLy8gfSwsXG4gICAgICAgICAgICAgICAge3Byb3ZpZGU6ICdjb25maWcnLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgICAgICAgXVxuICAgICAgICB9O1xuICAgIH1cbn0iXX0=