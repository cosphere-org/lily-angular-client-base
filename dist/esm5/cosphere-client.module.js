/**
* THIS FILE WAS AUTOGENERATED, ALL MANUAL CHANGES CAN BE
* OVERWRITTEN
*/
import { NgModule } from '@angular/core';
import { HttpClientModule } from '@angular/common/http';
/** Domains */
import { AccountSettingsDomain } from './domains/account_settings/index';
import { AccountsDomain } from './domains/accounts/index';
import { AttemptStatsDomain } from './domains/attempt_stats/index';
import { AttemptsDomain } from './domains/attempts/index';
import { AuthTokensDomain } from './domains/auth_tokens/index';
import { BricksDomain } from './domains/bricks/index';
import { CardsDomain } from './domains/cards/index';
import { CategoriesDomain } from './domains/categories/index';
import { ContactsDomain } from './domains/contacts/index';
import { DonationsDomain } from './domains/donations/index';
import { ExternalAppsDomain } from './domains/external_apps/index';
import { FocusRecordsDomain } from './domains/focus_records/index';
import { FragmentHashtagsDomain } from './domains/fragment_hashtags/index';
import { FragmentWordsDomain } from './domains/fragment_words/index';
import { FragmentsDomain } from './domains/fragments/index';
import { GeometriesDomain } from './domains/geometries/index';
import { GossipDomain } from './domains/gossip/index';
import { HashtagsDomain } from './domains/hashtags/index';
import { InvoicesDomain } from './domains/invoices/index';
import { LinksDomain } from './domains/links/index';
import { MediaitemsDomain } from './domains/mediaitems/index';
import { NotificationsDomain } from './domains/notifications/index';
import { NounsDomain } from './domains/nouns/index';
import { PathsDomain } from './domains/paths/index';
import { PaymentCardsDomain } from './domains/payment_cards/index';
import { PaymentsDomain } from './domains/payments/index';
import { ProcessesDomain } from './domains/processes/index';
import { QuizzerDomain } from './domains/quizzer/index';
import { RecallDomain } from './domains/recall/index';
import { SubscriptionsDomain } from './domains/subscriptions/index';
import { TasksDomain } from './domains/tasks/index';
import { WordsDomain } from './domains/words/index';
/** Services */
import { ClientService } from './services/client.service';
import { APIService } from './services/api.service';
var CoSphereClientModule = /** @class */ (function () {
    function CoSphereClientModule() {
    }
    CoSphereClientModule.forRoot = function (config) {
        return {
            ngModule: CoSphereClientModule,
            providers: [
                { provide: 'config', useValue: config }
            ]
        };
    };
    CoSphereClientModule.decorators = [
        { type: NgModule, args: [{
                    imports: [HttpClientModule],
                    providers: [
                        ClientService,
                        // Domains
                        AccountSettingsDomain,
                        AccountsDomain,
                        AttemptStatsDomain,
                        AttemptsDomain,
                        AuthTokensDomain,
                        BricksDomain,
                        CardsDomain,
                        CategoriesDomain,
                        ContactsDomain,
                        DonationsDomain,
                        ExternalAppsDomain,
                        FocusRecordsDomain,
                        FragmentHashtagsDomain,
                        FragmentWordsDomain,
                        FragmentsDomain,
                        GeometriesDomain,
                        GossipDomain,
                        HashtagsDomain,
                        InvoicesDomain,
                        LinksDomain,
                        MediaitemsDomain,
                        NotificationsDomain,
                        NounsDomain,
                        PathsDomain,
                        PaymentCardsDomain,
                        PaymentsDomain,
                        ProcessesDomain,
                        QuizzerDomain,
                        RecallDomain,
                        SubscriptionsDomain,
                        TasksDomain,
                        WordsDomain,
                        // Facade
                        APIService,
                    ]
                },] }
    ];
    return CoSphereClientModule;
}());
export { CoSphereClientModule };

//# sourceMappingURL=data:application/json;base64,