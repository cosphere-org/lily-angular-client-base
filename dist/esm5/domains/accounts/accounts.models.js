/**
  * THIS FILE WAS AUTOGENERATED, ALL MANUAL CHANGES CAN BE
  * OVERWRITTEN
  */
/**
 * https://bitbucket.org/goodai/cosphere-auth-service/src/09d74e1c1f6871739268cd74315b4f114592af2c/cosphere_auth_service/account/serializers.py/#lines-23
 */
export var BulkReadAccountsResponseAtype;
(function (BulkReadAccountsResponseAtype) {
    BulkReadAccountsResponseAtype["ADMIN"] = "ADMIN";
    BulkReadAccountsResponseAtype["FREE"] = "FREE";
    BulkReadAccountsResponseAtype["LEARNER"] = "LEARNER";
    BulkReadAccountsResponseAtype["MENTOR"] = "MENTOR";
    BulkReadAccountsResponseAtype["PARTNER"] = "PARTNER";
})(BulkReadAccountsResponseAtype || (BulkReadAccountsResponseAtype = {}));
/**
 * https://bitbucket.org/goodai/cosphere-auth-service/src/09d74e1c1f6871739268cd74315b4f114592af2c/cosphere_auth_service/account/serializers.py/#lines-8
 */
export var ReadAccountResponseAtype;
(function (ReadAccountResponseAtype) {
    ReadAccountResponseAtype["ADMIN"] = "ADMIN";
    ReadAccountResponseAtype["FREE"] = "FREE";
    ReadAccountResponseAtype["LEARNER"] = "LEARNER";
    ReadAccountResponseAtype["MENTOR"] = "MENTOR";
    ReadAccountResponseAtype["PARTNER"] = "PARTNER";
})(ReadAccountResponseAtype || (ReadAccountResponseAtype = {}));
/**
 * https://bitbucket.org/goodai/cosphere-auth-service/src/09d74e1c1f6871739268cd74315b4f114592af2c/cosphere_auth_service/account/serializers.py/#lines-8
 */
export var UpdateAccountResponseAtype;
(function (UpdateAccountResponseAtype) {
    UpdateAccountResponseAtype["ADMIN"] = "ADMIN";
    UpdateAccountResponseAtype["FREE"] = "FREE";
    UpdateAccountResponseAtype["LEARNER"] = "LEARNER";
    UpdateAccountResponseAtype["MENTOR"] = "MENTOR";
    UpdateAccountResponseAtype["PARTNER"] = "PARTNER";
})(UpdateAccountResponseAtype || (UpdateAccountResponseAtype = {}));

//# sourceMappingURL=data:application/json;base64,