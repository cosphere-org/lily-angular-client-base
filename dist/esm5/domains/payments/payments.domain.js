/**
  * THIS FILE WAS AUTOGENERATED, ALL MANUAL CHANGES CAN BE
  * OVERWRITTEN
  */
/**
 * Payments Management Domain
 */
import { Injectable } from '@angular/core';
import { filter } from 'rxjs/operators';
import * as _ from 'underscore';
import { ClientService } from '../../services/client.service';
var PaymentsDomain = /** @class */ (function () {
    function PaymentsDomain(client) {
        this.client = client;
    }
    /**
     * Update the status of a given Payment
     * -------------
     *
     * Update the Payment instance identified by the `session_id`. This command is for external use only therefore it doesn't expose internal ids of the payments but rather session id.
     */
    PaymentsDomain.prototype.updatePaymentStatus = function (body) {
        return this.client
            .post('/payments/(?P<session_id>[\w\-]+)', body, { authorizationRequired: false })
            .pipe(filter(function (x) { return !_.isEmpty(x); }));
    };
    PaymentsDomain.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PaymentsDomain.ctorParameters = function () { return [
        { type: ClientService }
    ]; };
    return PaymentsDomain;
}());
export { PaymentsDomain };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudHMuZG9tYWluLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNvc3BoZXJlL2NsaWVudC8iLCJzb3VyY2VzIjpbImRvbWFpbnMvcGF5bWVudHMvcGF5bWVudHMuZG9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7SUFHSTtBQUVKOztHQUVHO0FBQ0gsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFeEMsT0FBTyxLQUFLLENBQUMsTUFBTSxZQUFZLENBQUM7QUFFaEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBSzlEO0lBRUksd0JBQW9CLE1BQXFCO1FBQXJCLFdBQU0sR0FBTixNQUFNLENBQWU7SUFBRyxDQUFDO0lBRTdDOzs7OztPQUtHO0lBQ0ksNENBQW1CLEdBQTFCLFVBQTJCLElBQStCO1FBQ3RELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTTthQUNiLElBQUksQ0FBZ0MsbUNBQW1DLEVBQUUsSUFBSSxFQUFFLEVBQUUscUJBQXFCLEVBQUUsS0FBSyxFQUFFLENBQUM7YUFDaEgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBYixDQUFhLENBQUMsQ0FBQyxDQUFDO0lBQzFDLENBQUM7O2dCQWRKLFVBQVU7Ozs7Z0JBTEYsYUFBYTs7SUFxQnRCLHFCQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FmWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gICogVEhJUyBGSUxFIFdBUyBBVVRPR0VORVJBVEVELCBBTEwgTUFOVUFMIENIQU5HRVMgQ0FOIEJFXG4gICogT1ZFUldSSVRURU5cbiAgKi9cblxuLyoqXG4gKiBQYXltZW50cyBNYW5hZ2VtZW50IERvbWFpblxuICovXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgKiBhcyBfIGZyb20gJ3VuZGVyc2NvcmUnO1xuXG5pbXBvcnQgeyBDbGllbnRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvY2xpZW50LnNlcnZpY2UnO1xuaW1wb3J0IHsgRGF0YVN0YXRlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvY2xpZW50LmludGVyZmFjZSc7XG5cbmltcG9ydCAqIGFzIFggZnJvbSAnLi9wYXltZW50cy5tb2RlbHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUGF5bWVudHNEb21haW4ge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgY2xpZW50OiBDbGllbnRTZXJ2aWNlKSB7fVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSBzdGF0dXMgb2YgYSBnaXZlbiBQYXltZW50XG4gICAgICogLS0tLS0tLS0tLS0tLVxuICAgICAqXG4gICAgICogVXBkYXRlIHRoZSBQYXltZW50IGluc3RhbmNlIGlkZW50aWZpZWQgYnkgdGhlIGBzZXNzaW9uX2lkYC4gVGhpcyBjb21tYW5kIGlzIGZvciBleHRlcm5hbCB1c2Ugb25seSB0aGVyZWZvcmUgaXQgZG9lc24ndCBleHBvc2UgaW50ZXJuYWwgaWRzIG9mIHRoZSBwYXltZW50cyBidXQgcmF0aGVyIHNlc3Npb24gaWQuXG4gICAgICovXG4gICAgcHVibGljIHVwZGF0ZVBheW1lbnRTdGF0dXMoYm9keTogWC5VcGRhdGVQYXltZW50U3RhdHVzQm9keSk6IE9ic2VydmFibGU8WC5VcGRhdGVQYXltZW50U3RhdHVzUmVzcG9uc2U+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2xpZW50XG4gICAgICAgICAgICAucG9zdDxYLlVwZGF0ZVBheW1lbnRTdGF0dXNSZXNwb25zZT4oJy9wYXltZW50cy8oP1A8c2Vzc2lvbl9pZD5bXFx3XFwtXSspJywgYm9keSwgeyBhdXRob3JpemF0aW9uUmVxdWlyZWQ6IGZhbHNlIH0pXG4gICAgICAgICAgICAucGlwZShmaWx0ZXIoeCA9PiAhXy5pc0VtcHR5KHgpKSk7XG4gICAgfVxuXG59Il19