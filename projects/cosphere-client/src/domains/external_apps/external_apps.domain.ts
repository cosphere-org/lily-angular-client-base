/**
  * THIS FILE WAS AUTOGENERATED, ALL MANUAL CHANGES CAN BE
  * OVERWRITTEN
  */

/**
 * External Apps Management Domain
 */
import { Injectable } from '@angular/core';
import { filter } from 'rxjs/operators';
import { Observable } from 'rxjs';
import * as _ from 'underscore';

import { ClientService } from '../../services/client.service';
import { DataState } from '../../services/client.interface';

import * as X from './external_apps.models';

@Injectable()
export class ExternalAppsDomain {
    constructor(private client: ClientService) {}

    /**
     * Authorize a given external app token
     * -------------
     *
     * Can be called by the API Gateway in order to authorize every request using provided token. It must be used only for external app tokens, which are used by the external apps to make calls on behalf of a given user.
     */
    public authorizeExternalAppAuthToken(): Observable<X.AuthorizeExternalAppAuthTokenResponse> {
        return this.client
            .post<X.AuthorizeExternalAppAuthTokenResponse>('/external/auth_tokens/authorize/', {}, { authorizationRequired: false })
            // .pipe(filter(x => !_.isEmpty(x)));
    }

    /**
     * Read External App Configuration
     */
    public createExternalAppAuthToken(body: X.CreateExternalAppAuthTokenBody): Observable<X.CreateExternalAppAuthTokenResponse> {
        return this.client
            .post<X.CreateExternalAppAuthTokenResponse>('/external/auth_tokens/', body, { authorizationRequired: true })
            .pipe(filter(x => !_.isEmpty(x)));
    }

    /**
     * Read External App configuration
     */
    public readExternalappconf(params: X.ReadExternalappconfQuery): DataState<X.ReadExternalappconfResponse> {
        return this.client.getDataState<X.ReadExternalappconfResponse>('/external/apps/', { params, authorizationRequired: true });
    }
    
    public readExternalappconf2(params: X.ReadExternalappconfQuery): Observable<X.ReadExternalappconfResponse> {
        return this.client.get<X.ReadExternalappconfResponse>('/external/apps/', { params, authorizationRequired: true });
    }

}