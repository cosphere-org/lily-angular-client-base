/**
  * THIS FILE WAS AUTOGENERATED, ALL MANUAL CHANGES CAN BE
  * OVERWRITTEN
  */

/**
 * Tasks Management Domain
 */
import { Injectable } from '@angular/core';
import { filter } from 'rxjs/operators';
import { Observable } from 'rxjs';
import * as _ from 'underscore';

import { ClientService } from '../../services/client.service';
import { DataState } from '../../services/client.interface';

import * as X from './tasks.models';

@Injectable()
export class TasksDomain {
    constructor(private client: ClientService) {}

    /**
     * List Tasks
     * -------------
     *
     * List tasks
     */
    public bulkReadTasks(params: X.BulkReadTasksQuery): DataState<X.BulkReadTasksResponseEntity[]> {
        return this.client.getDataState<X.BulkReadTasksResponseEntity[]>('/tasks/', { params, responseMap: 'tasks', authorizationRequired: true });
    }
    
    public bulkReadTasks2(params: X.BulkReadTasksQuery): Observable<X.BulkReadTasksResponseEntity[]> {
        return this.client.get<X.BulkReadTasksResponseEntity[]>('/tasks/', { params, responseMap: 'tasks', authorizationRequired: true });
    }

    /**
     * List Task Bins
     * -------------
     *
     * List Tasks Bins
     */
    public bulkReadTaskBins(params: X.BulkReadTaskBinsQuery): DataState<X.BulkReadTaskBinsResponseEntity[]> {
        return this.client.getDataState<X.BulkReadTaskBinsResponseEntity[]>('/tasks/bins/', { params, responseMap: 'tasks_bins', authorizationRequired: true });
    }
    
    public bulkReadTaskBins2(params: X.BulkReadTaskBinsQuery): Observable<X.BulkReadTaskBinsResponseEntity[]> {
        return this.client.get<X.BulkReadTaskBinsResponseEntity[]>('/tasks/bins/', { params, responseMap: 'tasks_bins', authorizationRequired: true });
    }

}